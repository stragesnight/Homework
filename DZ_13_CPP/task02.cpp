/* ЗАДАНИЕ 2
	Группа: ПВ-011
	Ученик: Шелест Александр
	task02.cpp содержит функцию, которая убирает все вхождения указанного пользователем символа из строки */

#include <iostream>
#include <windows.h>

// убирает все вхождения заданного символа в строке
// и возвращает количество убранных символов
void removeSymbol(char* str, char charToRemove, int* nRemoved)
{
	// для каждого символа в строке...
	for (int i = 0; str[i] != '\0'; i++)
	{
		// если текущий символ нужно убрать...
		if (str[i] == charToRemove)
		{
			// сместить все последующие символы на один индекс ниже
			// тем самым убирая ненужный символ
			for (int j = i; str[j] != '\0'; j++)
				str[j] = str[j + 1];

			// инкремент количества убранных символов
			(*nRemoved)++;
			// возвращение на один символ назад
			// в случае если пара ненужных символов будет идти подряд
			i--;
		}
	}
}

int main()
{
	// конфигурация раскладки консоли
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	// объявление переменных
	char test[] = "Все вхождения заданного символа должны пропасть, иначе что-то пошло не по плану...";
	char* str = new char[96];
	char removeChar[2];		// использование массива для убираемого символа объяснено ниже
	int nRemoved = 0;

	// вывод начального текста на экран
	std::cout << "\t-= Задание 2 =- \n - написать функцию, которая убирает из строки все вхождения заданного символа.\n\n";
	std::cout << "Введите строку, или же \"test\" для использования заготовки\n";
	std::cout << "максимальная длина строки - 96:\n";
	// ввод строки с клавиатуры
	std::cin.getline(str, 96);

	// проверка на кодовое слово
	// "в лоб", но для данного случая достаточно
	if (str[0] == 't' && str[1] == 'e' && str[2] == 's' && str[3] == 't')
		str = test;

	// ввод символа
	std::cout << "\nвведите символ, который будет убран из строки (например, пробел - \' \'): ";
	// getline используется для возможности ввода пользователем пробела
	// однако последний символ в строке - всегда \0
	// что принуждает использовать массив для ввода символа,			removeChar == { '<любой символ>', '\0' }
	// помещая на первое место сам символ, а на второе - \0
	std::cin.getline(removeChar, 2);

	system("cls");

	// вывод строки
	std::cout << "строка - \"" << str << "\"";

	std::cout << "\nидет превращение...\n";
	// вызов функции, которая уберет символы
	// вторым параметром есть сам символ, т.к. он первый в массиве
	removeSymbol(str, removeChar[0], &nRemoved);

	// вывод изменённой строки
	std::cout << "\nстрока - \"" << str << "\"\n";
	std::cout << "\t- убранный символ - \'" << removeChar << "\', их количество в строке - " << nRemoved;

	// пауза и завершение программы
	std::cout << "\n\n\nНажмите любую клавишу для выхода из программы...";
	_getwch();		// получение любого символа с клавиатуры
	return 0;
}