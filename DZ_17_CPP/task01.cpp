/* ЗАДАНИЕ 1
    Группа: ПВ-011
    Ученик: Шелест Александр
    task01.cpp - программа, использующая макросы для различных математических операций. */
#include <iostream>
#include <Windows.h>

// Извиняюсь за ошибки! Да, поспешил, внес правки и без проверки отправил на проверку
// исключающее или заменил на "!&" (не и), исправил ошибку при вводе пользователем данных.

// возвращает меньшее из двух параметров
#define MIN(a, b) (a < b ? a : b)

// возвращает большее из двух параметров
#define MAX(a, b) (a < b ? b : a)

// подносит параметр во вторую степень
#define POW2(a)   (a * a)

// подносит а в степень b, запись равноценна следующей функции:
// 
//  template <class T> void POW(T* a, int b)
//  {
//      T tmp = *a;
//      for (int i = 0; i < b; i++)
//          (*a) *= tmp;
//  }
// 
// ключевое слово "auto" перекладывает обязанность выбора типа данных с программиста на компилятор
// запись "##a" равноценна выражению "получить имя переменной, соответствующей параметру 'а'"
#define POW(a, b) {auto tmp = a; for (int i = 1; i < b; i++) ##a *= tmp; }

// проверяет параметр на чётность (возвращает 1 если число чётное)
// в двоичной системе все числа, у которых самый младший бит равен 1 - нечётные:
//  0001 - 1 - нечёное
//  0010 - 2 - чётное
//  0011 - 3 - нечётное
//  0100 - 4 - чётное
//  ...
//
// поэтому, с помощью операции побитового "и" (&) и переворачиванием (!) с маской 1 можно проверить число на чётность
// 
// примеры:
//  0010 1011                       |   1101 0110
//  &!                              |  &!
//  0000 0001                       |   0000 0001
//  ---------                       |   ---------
//  0000 0000 (число нечётное)      |   0000 0001 (число чётное)
#define PARITY(a) !((int)a & 1)

// проверяет параметр на нечётность (возвращает 1 если число нечётное)
// работает по принципу макроса выше, только вместо "исключаещего или" (^),
// используется противоположная в данном случае операция - "и" (&),
#define NPARITY(a)((int)a & 1)

int main()
{
    // добавление поддержки кириллицы
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    // резервирование нужных переменных
    int _a, _b;
    float n;

    // MIN
    std::cout << "введите два числа для проверки меньшего из них: ";
    std::cin >> _a >> _b;
    std::cout << "между " << _a << " и " << _b << " меньшее = " << MIN(_a, _b) << ";\n\n";

    // MAX
    std::cout << "введите два числа для проверки большего из них: ";
    std::cin >> _a >> _b;
    std::cout << "между " << _a << " и " << _b << " большее = " << MAX(_a, _b) << ";\n\n";

    // POW2
    std::cout << "введите число для поднесения в квадрат: ";
    std::cin >> n;
    std::cout << n << " в квадрате = " << POW2(n) << ";\n\n";
    
    // POW
    std::cout << "введите основу и показатель степеня: ";
    std::cin >> n >> _a;
    std::cout << n << " ^ " << _a << " = ";
    POW(n, _a);
    std::cout << n << ";\n\n";

    // PARITY
    std::cout << "введите число для его проверки на чётность: ";
    std::cin >> _a;
    std::cout << "чётно ли число " << _a << "? - ";
    if (PARITY(_a))
        std::cout << "да;\n\n";
    else
        std::cout << "нет;\n";
    
    // NPARITY
    std::cout << "введите число для его проверки на нечётность: ";
    std::cin >> _a;
    std::cout << "нечётно ли число " << _a << "? - ";
    if (NPARITY(_a))
        std::cout << "да.\n";
    else
        std::cout << "нет.\n";

    std::cout << "\n\nнажмите любую клавишу для выхода из программы...\n";
    _getwch();
    return 0;
}